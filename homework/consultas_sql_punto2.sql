-- BASES DE DATOS Y COLUMNAS UTILIZADAS:
-- Estudiante ('ID', 'NOMBREAPELLIDO', 'CODIGOCIUDAD', 'FECHAINGRESO', 'TELEFONO', 'CORREO', 'CARRERA')
-- Ciudad ('CODIGOCIUDAD', 'NOMBRECIUDAD')

-- PREGUNTA 1: Cantidad de estudiantes por ciudad, en orden descendente
SELECT
    c.NOMBRECIUDAD,
    COUNT(e.ID) AS NUM_ESTUDIANTES
FROM
    Estudiante e
JOIN
    Ciudad c ON e.CODIGOCIUDAD = c.CODIGOCIUDAD
GROUP BY
    c.NOMBRECIUDAD
ORDER BY
    NUM_ESTUDIANTES DESC;

-- PREGUNTA 2: Agrupar por año de ingreso y carrera
SELECT
    EXTRACT(YEAR FROM FECHAINGRESO) AS ANIO_INGRESO,
    CARRERA,
    COUNT(ID) AS NUM_ESTUDIANTES
FROM
    Estudiante
GROUP BY
    ANIO_INGRESO,
    CARRERA
ORDER BY
    ANIO_INGRESO,
    NUM_ESTUDIANTES DESC;

-- PREGUNTA 3: Meses transcurridos desde la fecha de ingreso
-- Ejemplo para SQL Server o MySQL
SELECT
    ID,
    NOMBREAPELLIDO,
    FECHAINGRESO,
    DATEDIFF(MONTH, FECHAINGRESO, '2023-10-01') AS MESES_TRANSCURRIDOS
FROM
    Estudiante;

-- PREGUNTA 4: Seleccionar las ciudades sin estudiantes
SELECT
    c.NOMBRECIUDAD
FROM
    Ciudad c
LEFT JOIN
    Estudiante e ON c.CODIGOCIUDAD = e.CODIGOCIUDAD
GROUP BY
    c.NOMBRECIUDAD
HAVING
    COUNT(e.ID) = 0;

-- PREGUNTA 5 y 7: Identificación de Datos Incompletos
SELECT
    ID,
    NOMBREAPELLIDO,
    CONTACTO_INCOMPLETO AS DATO_FALTANTE
FROM
    Estudiante
WHERE
    CONTACTO_INCOMPLETO IN ('TELEFONO', 'CORREO', 'FECHAINGRESO');

-- PREGUNTA 6: Cantidad de estudiantes por carrera en cada ciudad
SELECT
    c.NOMBRECIUDAD,
    e.CARRERA,
    COUNT(e.ID) AS NUM_ESTUDIANTES
FROM
    Estudiante e
JOIN
    Ciudad c ON e.CODIGOCIUDAD = c.CODIGOCIUDAD
GROUP BY
    c.NOMBRECIUDAD,
    e.CARRERA
ORDER BY
    c.NOMBRECIUDAD,
    NUM_ESTUDIANTES DESC;